name: "Run benchmark"
on:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened, edited]
  push:
    branches: 
      - diff
permissions:
  contents: write
  pull-requests: write
  issues: write
jobs:
  build-job:
    runs-on: ubuntu-latest
    if: github.event.head_commit.message != 'Update performance results in README.md'
    
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}


      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.devcontainer/Dockerfile
          tags: graphql-benchmarks:v1
          outputs : type=docker,dest=/tmp/graphql-benchmarks.tar

      - name: Upload docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: graphql-benchmarks
          path: /tmp/graphql-benchmarks.tar


  benchmark-job:
    needs: build-job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [apollo_server, caliban, netflix_dgs, gqlgen, tailcall, async_graphql, hasura, graphql_jit]
    
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
      
      - name: Download docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: graphql-benchmarks
          path: /tmp/

      - name: Load Docker image and Run benchmarks
        run: |
          docker load -i /tmp/graphql-benchmarks.tar
          docker run --rm \
          -v $PWD:/workspace \
          graphql-benchmarks:v1 \
          bash -c "systemctl start docker.service && sleep 10 & cd /workspace && ./graphql/${{ matrix.service }}/setup.sh && bash run_benchmarks.sh ${{ matrix.service }}"

      - name: List benchmark files
        run: |
          echo "Contents of current directory:"
          ls -la bench*.txt || echo "No matching files found"
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: bench*.txt


  analyze:
    needs: benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4

      - name: Download all benchmark results
        uses: actions/download-artifact@v3
        with:
          name: benchmark-results
          path: .

      - name: List downloaded artifacts
        run: ls -la bench*.txt || echo "No matching files found"

      - name: Analyze results
        run: |
          bash run_analyze_script.sh

      - name: Print benchmark results
        run: cat ./results.md

      - name: Comment benchmark results on PR
        if: github.event_name == 'pull_request_target'
        uses: peter-evans/commit-comment@v3
        with:
          sha: ${{ github.event.pull_request.head.sha }}
          body-path: "results.md"
          reactions: eyes

      - name: Commit and push changes (on main branch)
        if: github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_author: Author <actions@github.com>
          commit_message: "Update performance results in README.md"