name: "Run benchmarks"

on:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened, edited]
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  benchmark:
    runs-on: benchmarking-runner
    if: github.event.head_commit.message != 'Update performance results in README.md'
    strategy:
      matrix:
        service: [apollo_server, caliban, netflix_dgs, gqlgen, tailcall, async_graphql, hasura, graphql_jit]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}

      - name: Build devcontainer and run benchmark
        uses: devcontainers/ci@v0.3
        with:
          imageName: graphql-benchmarks
          push: never
          runCmd: |
            bash ./setup.sh
            bash ./run_benchmarks.sh ${{ matrix.service }}

      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results-${{ matrix.service }}
          path: bench*_result*_graphql_${{ matrix.service }}_run.sh.txt

  analyze:
    needs: benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4

      - name: Download all benchmark results
        uses: actions/download-artifact@v3

      - name: Analyze results
        run: |
          for bench in 1 2 3; do
            files=$(find . -name "bench${bench}_result*_graphql_*_run.sh.txt")
            bash analyze.sh $files >> results.md
          done

      - name: Print benchmark results
        run: cat ./results.md

      - name: Comment benchmark results on PR
        if: github.event_name == 'pull_request_target'
        uses: peter-evans/commit-comment@v3
        with:
          sha: ${{ github.event.pull_request.head.sha }}
          body-path: "results.md"
          reactions: eyes

      - name: Commit and push changes (on main branch)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_author: Author <actions@github.com>
          commit_message: "Update performance results in README.md"