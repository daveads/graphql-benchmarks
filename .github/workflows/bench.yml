name: "Run benchmark"
on:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened, edited]
  push:
    branches: 
      - Test_bench
permissions:
  contents: write
  pull-requests: write
  issues: write
jobs:
  benchmark:
    runs-on: ubuntu-latest
    if: github.event.head_commit.message != 'Update performance results in README.md'
    strategy:
      matrix:
        service: [apollo_server, caliban, netflix_dgs, gqlgen, tailcall, async_graphql, hasura, graphql_jit]
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Build devcontainer and run setup and benchmark Test**
        uses: devcontainers/ci@v0.3
        with:
          imageName: graphql-benchmarks
          push: never
          runCmd: |
            echo "Running setup script for ${{ matrix.service }}"
            if [ -f "./graphql/${{ matrix.service }}/setup.sh" ]; then
            bash ./graphql/${{ matrix.service }}/setup.sh
            echo "Setup completed for ${{ matrix.service }}"

            else
              echo "No specific setup script found for ${{ matrix.service }}, running general setup"
            fi
            

            echo "Setup completed"
            echo "Running benchmark for ${{ matrix.service }}"
            chmod +x ./run_benchmarks.sh
            valid_services=("apollo_server" "caliban" "netflix_dgs" "gqlgen" "tailcall" "async_graphql" "hasura" "graphql_jit")
            if [[ ! " ${valid_services[@]} " =~ " ${{ matrix.service }} " ]]; then
                echo "Error: Invalid service name '${{ matrix.service }}'"
                exit 1
            fi
            if ! ./run_benchmarks.sh ${{ matrix.service }}; then
                echo "Error: Benchmark failed for ${{ matrix.service }}"
                exit 1
            fi
            echo "Benchmark completed for ${{ matrix.service }}"


      - name: List benchmark files
        run: |
          echo "Contents of current directory:"
          ls -la
          echo "Matching bench*.txt files:"
          ls -la bench*.txt || echo "No matching files found"


      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: bench*.txt


  analyze:
    needs: benchmark
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4

      - name: Download all benchmark results
        uses: actions/download-artifact@v3
        with:
          name: benchmark-results
          path: .

      - name: List downloaded artifacts
        run: ls -la bench*.txt || echo "No matching files found"

      - name: output of tailcall
        run: |
          echo "Benchmark 1"
          cat ./bench1_result1_graphql_tailcall_run.sh.txt
          cat ./bench1_result2_graphql_tailcall_run.sh.txt
          cat ./bench1_result3_graphql_tailcall_run.sh.txt
          echo "End of Becnhmark 1"
          echo ""

          echo "Benchmark 2"
          cat ./bench2_result1_graphql_tailcall_run.sh.txt
          cat ./bench2_result2_graphql_tailcall_run.sh.txt
          cat ./bench2_result3_graphql_tailcall_run.sh.txt
          echo "End of Becnhmark 2"
          echo ""

          echo "Becnhmark 3"
          cat ./bench3_result1_graphql_tailcall_run.sh.txt
          cat ./bench3_result2_graphql_tailcall_run.sh.txt
          cat ./bench3_result3_graphql_tailcall_run.sh.txt
          echo "End of Benchmark 2"
          echo ""

      - name: Analyze results
        run: |
          # Benchmark 1
          ls bench1*.txt || echo "No matching files found for bench1*.txt"
          echo "Processing files for bench1:"
          bash analyze.sh bench1*.txt
          echo bench1*.txt

          # Benchmark 2
          ls bench2*.txt || echo "No matching files found for bench2*.txt"
          echo "Processing files for bench2:"
          bash analyze.sh bench2*.txt
          echo bench2*.txt

          # Benchmark 3
          ls bench3*.txt || echo "No matching files found for bench3*.txt"
          echo "Processing files for bench3:"
          bash analyze.sh bench3*.txt
          echo bench3*.txt
          
      - name: Print benchmark results
        run: cat ./results.md

      - name: Comment benchmark results on PR
        if: github.event_name == 'pull_request_target'
        uses: peter-evans/commit-comment@v3
        with:
          sha: ${{ github.event.pull_request.head.sha }}
          body-path: "results.md"
          reactions: eyes

      - name: Commit and push changes (on main branch)
        if: github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_author: Author <actions@github.com>
          commit_message: "Update performance results in README.md"
