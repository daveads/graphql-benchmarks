name: "Run benchmark with Cached Devcontainer"

on:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened, edited]
  push:
    branches:
      - diff

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  build-job:
    runs-on: ubuntu-latest
    if: github.event.head_commit.message != 'Update performance results in README.md'
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Cache devcontainer
        id: cache-devcontainer
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-devcontainer-${{ hashFiles('**/devcontainer.json', '**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-devcontainer-

      - name: Build devcontainer
        uses: devcontainers/ci@v0.3
        with:
          imageName: graphql-benchmarks
          push: never
          cacheFrom: type=local,src=/tmp/.buildx-cache
          cacheTo: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          echo "Contents of /tmp:"
          ls -la /tmp
          echo "Contents of /tmp/.buildx-cache (if it exists):"
          ls -la /tmp/.buildx-cache || echo "/tmp/.buildx-cache does not exist"
          echo "Contents of /tmp/.buildx-cache-new (if it exists):"
          ls -la /tmp/.buildx-cache-new || echo "/tmp/.buildx-cache-new does not exist"
          
          if [ -d "/tmp/.buildx-cache-new" ]; then
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          else
            echo "No new cache to move. Skipping cache update."
          fi

  benchmark-job:
    needs: build-job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [apollo_server, caliban, netflix_dgs, gqlgen, tailcall, async_graphql, hasura, graphql_jit]
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}

      - name: Load cached devcontainer
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-devcontainer-${{ hashFiles('**/devcontainer.json', '**/Dockerfile') }}

      - name: Run benchmarks in devcontainer
        uses: devcontainers/ci@v0.3
        with:
          imageName: graphql-benchmarks
          push: never
          runCmd: |
            ./graphql/${{ matrix.service }}/setup.sh
            bash run_benchmarks.sh ${{ matrix.service }}

      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: bench*.txt

  analyze:
    needs: benchmark-job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4

      - name: Download all benchmark results
        uses: actions/download-artifact@v3
        with:
          name: benchmark-results
          path: .

      - name: Analyze results
        run: |
          bash run_analyze_script.sh

      - name: Print benchmark results
        run: cat ./results.md

      - name: Comment benchmark results on PR
        if: github.event_name == 'pull_request_target'
        uses: peter-evans/commit-comment@v3
        with:
          sha: ${{ github.event.pull_request.head.sha }}
          body-path: "results.md"
          reactions: eyes

      - name: Commit and push changes (on main branch)
        if: github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_author: Author <actions@github.com>
          commit_message: "Update performance results in README.md"